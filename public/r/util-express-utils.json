{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "util-express-utils",
  "type": "registry:file",
  "title": "Express Utils",
  "description": "Utilities for working with express.js.",
  "dependencies": [
    "express"
  ],
  "files": [
    {
      "path": "registry/input/items/utility-framework/express.utils.ts",
      "content": "import type {\n  Request as ExpressRequest,\n  Response as ExpressResponse,\n} from 'express';\n\nexport const getExpressRequestInfo = (\n  req: ExpressRequest,\n  res: ExpressResponse,\n  reqId: string,\n) => {\n\n  // get request data\n  const isHostLocalhost = req.hostname === 'localhost' || req.hostname.startsWith('192.168.');\n  const reqData = {\n    id: reqId,\n    origin: req.headers.origin,\n    method: req.method,\n    hostname: req.hostname,\n    path: req.path,\n    query: req.query,\n    full_url: [\n      req.protocol,\n      \"://\",\n      req.hostname,\n      isHostLocalhost ? `:${req.socket.localPort}` : '',\n      req.originalUrl,\n    ].join(''),\n    headers: req.headers,\n  };\n\n  // get response data\n  const resData = {\n    statusCode: res.statusCode,\n    statusMessage: res.statusMessage,\n    responseTime: 'responseTime' in res ? res.responseTime : 'unknown',\n    headers: ('_header' in res && typeof res._header === 'string') ? res._header.split('\\n') : 'unknown',\n  };\n\n  return {\n    reqData,\n    resData,\n  };\n};\n\n",
      "type": "registry:file",
      "target": "utils/express.utils.ts"
    }
  ],
  "categories": [
    "utility-framework"
  ]
}